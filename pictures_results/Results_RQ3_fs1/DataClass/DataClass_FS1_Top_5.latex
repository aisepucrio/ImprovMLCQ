\begin{tabular}{ll}
\toprule
model & params \\
\midrule
XGBClassifier & {'objective': 'binary:logistic', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': 0.8271543772192373, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': 0.21268096847567106, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': 8, 'max_leaves': None, 'min_child_weight': 3, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': 217, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 5582, 'reg_alpha': 3.1524329262935274e-09, 'reg_lambda': 0.008846192079241456, 'sampling_method': None, 'scale_pos_weight': 31.895278707463934, 'subsample': 0.61541854066287, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0} \\
LGBMClassifier & {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 3.344603600740365e-05, 'max_depth': -1, 'min_child_samples': 4, 'min_child_weight': 0.001, 'min_split_gain': 0.7134403094458931, 'n_estimators': 298, 'n_jobs': -1, 'num_leaves': 208, 'objective': None, 'random_state': 5582, 'reg_alpha': 0.012042345634204822, 'reg_lambda': 0.001599179072389176, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'feature_fraction': 0.4774800599415239, 'bagging_fraction': 0.4792601170282461, 'bagging_freq': 4} \\
RandomForestClassifier & {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': {}, 'criterion': 'gini', 'max_depth': 10, 'max_features': 0.5308337955558923, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 3.513431282374507e-08, 'min_samples_leaf': 6, 'min_samples_split': 8, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 44, 'n_jobs': -1, 'oob_score': False, 'random_state': 5582, 'verbose': 0, 'warm_start': False} \\
ExtraTreesClassifier & {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 5582, 'verbose': 0, 'warm_start': False} \\
DecisionTreeClassifier & {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 15, 'max_features': 0.653115743510125, 'max_leaf_nodes': None, 'min_impurity_decrease': 5.934042656820536e-05, 'min_samples_leaf': 2, 'min_samples_split': 5, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 5582, 'splitter': 'best'} \\
\bottomrule
\end{tabular}
